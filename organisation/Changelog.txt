This is just to motivate myself to improve a little bit every day :)

Best: 32

24-04-2024
Streak: 32
Learned:
Did:
    -Add linter command script, remove obsolete lint.xml file


23-04-2024
Streak: 31
Learned:
    -Realise linter isn't going to work, need to use ktlint and detekt instead
Did:
    -Add detekt as plugin to project (as yet untested)

22-04-2024
Streak: 30
Learned:
    -Read about adding linter rules
Did:

21-04-2024
Streak: 29
Learned:
Did:
    -Finalise MainMenu title design and implementation

20-04-2024
Streak: 28
Learned:
Did:
    -Add menu title strings for en and nl. Move menu title to its own component,
        for now passing the whole parent state
    -Add Int to ordinal number String function in resourceComposition. Tidy up MainMenuTitle code

19-04-2024
Streak: 27
Learned:
Did:
    -Add 'festive days' to the app, to display instead of dayOfWeek on special days
    -Make mock-up for MainMenu title -> still needs to be done properly and in its own component

18-04-2024
Streak: 26
Learned:
Did:
    -Make Main Menu View only rely on Main Menu View Model, not Calendar View Model

17-04-2024
Streak: 25
Learned:
Did:
    -Update en and nl strings to only populate the plural forms they use, add NL to Locale lib
    -Add Locales from Azerbaijani .. Danish
    -Add support for all Locales that have their ordinal rules listed at
        https://www.unicode.org/cldr/cldr-aux/charts/36.1/supplemental/language_plural_rules.html
    -Simplify Locales that only return PluralForm.OTHER

16-04-2024
Streak: 24
Learned:
Did:
    -Add ordinal strings as string array (try to find what works within compose multiplatform
        limitations, without relying on expect/actual workarounds)
    -Start implementing my own library for fetching Ordinal rules per locale. I'm stubborn so I'd
        rather do this than rely on Moko for Resource Management, or implement it with expect/actual

15-04-2024
Streak: 23
Learned:
    -Read about localising ordinal numbers with plural strings,
        most likely need to use MessageFormat but need to read more about how it works
        and whether it is available in compose multiplatform
Did:

14-04-2024
Streak: 22
Learned:
Did:
    -Ensure SeasonInfo is populated with correct info,
        using inaccurate calculation of Solstices & Equinoxes
    -Clean up logic for making days tick over at 4am instead of midnight
    -Make CalendarState directly accessible to main menu, change background and title based on
        seasonal information.
    -Fix coroutine wake-up logic
    -Add strings for seasons
    -Add Composeable resource functions for seasons
    -Reorganise backlog into directory with separate files
        (this will also let me save notes I'm done with)

13-04-2024
Streak: 21
Learned:
    - Read about Solar Seasons.
Did:
    -Add strings for equinoxes, solstices, and seasonal festivals
    -Rewrite CalendarFragment to use a CalendarState data class, instead of only emitting DayOfWeek
    -Group SeasonInfo as separate data class within CalendarState data class

12-04-2024
Streak: 20
Learned:
Did:
    - Fix, clean up and test Calendar ViewModel and Repository
        but still need to remove CalendarFragment

11-04-2024
Streak: 19
Learned:
Did:
    - Rework getTodayWithOffset to be more configurable, change name as 'today with offset'
        sounds more confusing than clearly pointing out it is a wacky situational implementation.
    - Work on CalendarComponent (VM, Repo, Fragment) to implement coroutine that only checks if
        day has been updated when it needs to. (Messy WIP)

10-04-2024
Streak: 18
Learned:
    - Workshop on coroutines
Did:
    - Hacky implementation that temporarily uses CalendarFragment as a UI component
        (needs to change) as title for main menu
    - Start implementing a way to observe a change of date whilst app is running, using coroutines

09-04-2024
Streak: 17
Learned:
Did:
    -Add a reusable 'OutlinedText' component, to display readable text against any background
    -Revert overzealous auto-refactor ->
        'kotlin.code.style' setting had been renamed 'kotlin.code.ui.style' when style dir was
        placed in a directory named ui.

08-04-2024
Streak: 16
Learned:
Did:
    -Add standard padding definitions for different screen sizes

07-04-2024
Streak: 15
Learned:
Did:
    -Split colours from theme into separate file + function
    -Make colours providable to other composables in the tree using CompositionLocalProvider
    -Make MainMenuSub component, to hold different sub menus that are displayable on the main menu
    -Add transparency to ImageButton component, make the day part menu buttons slightly transparent
    -Remove hardcoded string, allow title of SubMenu now to be passed as param

06-04-2024
Streak: 14
Learned:
    -Read about using CompositionLocal (again) - this time in the context of passing theme colours.
Did:
    -Update notes on how to improve adaptive ui - for future reference, don't want to work on it
        anymore right now.
    -Refactor MainMenu Button to a more generic & reusable ImageButton
    -Move new ImageButton composable to reusableUi directory (separate commit so history is preserved)

05-04-2024
Streak: 13
Learned:
Did:
    -Failed to make AdaptiveColumn respect Modifier.weight (to be set either within a ColumnScope
        or RowScope context)

04-04-2024
Streak: 12
Learned:
    -Read about adaptive layouts (I really should be storing screen size type,
        but am starting smaller)
Did:
    -Start implementing an 'AdaptiveColumn' which will display as column in Portrait, and as Row in
        landscape mode -WIP

03-04-2024
Streak: 11
Learned:
    -Read about compose modifiers
Did:
    -Separate Main Menu Buttons into separate file, add background image to them
    -Try to make layout work and respect individual item weights, but it is very obviously
        broken in landscape with the current setup
    -Fix menu buttons not displaying how I want, though still need to swap between row/column
        based on device orientation

02-04-2024
Streak: 10
Learned:
Did:
    -Import image resources for main menu + buttons
    -Add background image to Main Menu - static for now

01-04-2024
Streak: 9
Learned:
Did:
    -Change default colours for light mode in theme

31-03-2024
Streak: 8
Learned:
Did:
    -Just get rid of some hardcoded strings

30-03-2024
Streak: 7
Learned:
Did:
    -Set up basic navigation from Main Menu to DayPart Menu, three buttons doing the same thing

29-03-2024
Streak: 6
Learned:
Did:
    -Start implementing Navigation Host
    -Add scaffolding (just files) for Main Menu screen, and reusable screen for Morning, Midday,
        Evening Menus called DayPart Menu
    -Set up minimal placeholder for MainMenu screen, mount it to main screen on start up
    -Add 'templateComponent' to organisation directory as a quick copy-paste blue print
        for future components

28-03-2024
Streak: 5
Learned:
    -Read about Navigation Host, Graph, Controller
Did:
    -Add over-engineered 'Calendar Fragment' for displaying current day, using MVVM pattern
    -Change project structure slightly: data layer shouldn't use '@Composable' annotation,
        presentation layer should only import from data layer in ViewModels.

27-03-2024
Streak: 4
Learned:
Did:
    -Messed about with trying to set up an example component that adheres to MVVM pattern, but
        couldn't get the ViewModel class to work - something about kotlin.AutoCloseable not being
        accessible.
    -Upgrade kotlin (and its stdlib) from 1.9.22 -> 1.9.23 to fix missing AutoCloseable

26-03-2024
Streak: 3
Learned:
Did:
    -Disable precompose as it stops iOS from building
    -Start Koin on both iOS and Android (can't be done from shared code)
    -Remove special character unsupported by custom font
    -Fix sloppy precompose dependency implementations, re-enable precompose
    -Wrap the shared app component with PreComposeApp, instead of the individual Android and iOS
        apps as is done in some tutorials. I think this should work... we'll find out if it doesn't

25-03-2024
Streak: 2
Learned:
    -Read a little about dependency injection.
Did:
    -Update compose version, add koin and precompose to project.

24-03-2024
Streak: 1
Learned:
    -Read about MVVM pattern. Goal is to separate Interface and Business Logic.
        Good pattern to keep in mind, but app is not large enough to implement it yet.
Did:
    -Preliminary split (in name only) of data and presentation layers.
    -Add string localisation (using Compose Multiplatform out of the box solution).