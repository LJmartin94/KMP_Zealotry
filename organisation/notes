3 big topics to get right are:
* General Architecture/ project layout
* Navigation between ui.views/ screens
* State management

Continue with ->
Navigation:
General navigation theory -
https://developer.android.com/guide/navigation
Compose specific -
https://developer.android.com/jetpack/compose/navigation

Architecture example for MVVM & API calls:
https://medium.com/@nitheeshag/building-a-compose-multiplatform-app-with-an-architectural-pattern-e31a85e82927
https://github.com/imnithish/earth-stuff/tree/main

Adaptive UI notes -
We still need to fix the switching from portrait to landscape modes. AdaptiveColumn class didn't
work (couldn't make it respect weights for both column and row). Also the way we currently check
orientation is a bit of a hack. If there isn't a better way to do that, we should really wrap the
whole app in a BoxWithConstraints composable, and then save orientation in the global state and
reference it elsewhere, but my assumption is the whole thing can be done better anyway.
https://www.netguru.com/blog/multiplatform-adaptive-ui

Passing screen size & orientation info (without expect/actual - shared codebase principle):
https://stackoverflow.com/questions/77341731/how-to-get-screen-width-and-height-in-compose-multiplatform
contains answer which points to this github discussion as background:
https://github.com/JetBrains/compose-multiplatform/discussions/3225#discussioncomment-7386013
which points to this related stackoverflow question:
https://stackoverflow.com/questions/73354911/how-to-get-exact-size-without-recomposition
which contains a lot more theory I need to dive into to understand properly :P

Intro to PreCompose:
https://tlaster.github.io/PreCompose/sample.html#note-app

Intro to Koin:
https://insert-koin.io/docs/quickstart/android-compose/

Example clock component using MVVM:
https://github.com/KitsuneFolk/TimeUI

Android only clock tutorial using LiveData:
https://www.youtube.com/watch?v=CaaSP3ayKWI

Tutorial on getting started with KMM:
https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-multiplatform-explore-composables.html#implementing-composable-functions

Feature parity with React app:
https://github.com/LJmartin94/React_Zealotry

Localisation:
https://phrase.com/blog/posts/internationalizing-jetpack-compose-android-apps/
https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-images-resources.html#resource-usage

MVVM:
https://medium.com/weeronline/our-approach-to-modularization-and-mvvm-44aae0a3ea41

MVVM using MokoMVVM: (in case we want to switch)
https://medium.com/@italord.melo/compose-multiplatform-mvvm-ktor-building-an-app-with-patterns-for-android-ios-and-desktop-4ae01594887c

Example apps:
https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-samples.html

Calculate Solstices and Equinoxes:
https://www.codeguru.com/cplusplus/equinox-and-solstice-calculation/
https://github.com/4nickel/season/tree/master
https://github.com/dnafinder/eqnsol
https://github.com/commenthol/astronomia/tree/master
Simplified (without Meeus):
https://www.aa.quae.nl/en/antwoorden/seizoenen.html